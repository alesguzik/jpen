
<project name="jniBuild" default="linkSrc">
	
	<import file="javaBuild.xml"/>
	
	<target name="init" depends="javaBuild.init">
		<!--list of classes with native methods -->
		<property name="module.jniClasses" value="jpen.cFramework.TestType, jpen.provider.xinput.XiBus, jpen.provider.xinput.XiDevice, jpen.provider.wintab.WintabAccess "/>
		<property name="module.linuxGccExtraLib" value="-lXi"/>
		<property name="module.jniLibNamePrefix" value="${module.id}-${module.version}"/>
		<property name="linux_jniHeadersPath" value="/opt/sun-jdk-1.5.0.22/include"/>
		<property name="windows_jniHeadersPath" value="/home/nicarran/aux/distributions/jdk-6_23-windows-include"/>
		
		<property name="module.windowsGccExtraLib" value="-Llib -lWintab32 "/>
		<property name="module.windowsGccExtraLib-64" value="-Llib-64 -lWintab64"/>
		
		<property name="module.linuxJniLibName" value="${module.jniLibNamePrefix}-${jpen.provider.xinput.nativeVersion}"/>
		<property name="module.winJniLibName" value="${module.jniLibNamePrefix}-${jpen.provider.wintab.nativeVersion}"/>
		<property name="module.osxJniLibName" value="${module.jniLibNamePrefix}-${jpen.provider.osx.nativeVersion}"/>

				<!-- TIPS for Windows DLLs

				Todavia no he probado esto!

				* to generate the def and use dlltool see:
				http://www.mingw.org/MinGWiki/index.php/CreateImportLibraries
				use also the "-A" switch in dlltool:
				wine c:/mingw/bin/dlltool -d Wintab32.def -l libWintab32.a
				wine c:/mingw/bin/dlltool -d Wintab32.def -D Wintab32.dll -l libWintab32.a

				*EXAMPLE of using external dll under mingw
				gcc -c -mrtd -Ic:/S/splus6/include VCrndS4.c
				gcc -shared -o S.dll VCrndS4.o -Lc:/S/splus6/lib/mingw -lSqpe

				-->
		
		<mkdir dir="src/main/c"/>
		<mkdir dir="src/main/c/windows"/>
		<mkdir dir="src/main/c/linux"/>
	</target>
	
	<target name="linkSrc" depends="javaBuild.linkSrc">
		<exec executable="ln" os="Linux">
			<arg value="-sf"/>
			<arg value="src/main/c"/>
			<arg value="src-c"/>
		</exec>
	</target>
	
	<target name="clean" depends="javaBuild.clean, updateNativeBuildHeaders">
		<delete>
			<fileset dir="src/main/c/windows" includes="*.o"/>
		</delete>
	</target>
	
	<target name="javah" depends="init,compile" if="module.jniClasses">
		<javah class="${module.jniClasses}" destdir="src/main/c" force="yes" classpath="${module.srcclasspath}"></javah>
		<path id="_headers">
			<fileset dir="src/main/c">
				<include name="*.h"/>
			</fileset>
		</path>
		<pathconvert pathsep="," dirsep="/" property="_cSkeletons" refid="_headers">
			<chainedmapper>
				<mapper type="flatten"/>
				<mapper type="regexp" from="^(.*)\.h$$" to="\1.c"/>
			</chainedmapper>
		</pathconvert>

				<!--<touch>
						<filelist dir="src/main/c/linux" files="${_cSkeletons}"/>
						<filelist dir="src/main/c/windows" files="${_cSkeletons}"/>
				</touch>-->
	</target>
	
	<target name="libLinux-x86" depends="init">
		<pathconvert pathsep=" " dirsep="/" property="_sources">
			<path>
				<fileset dir="src/main/c/linux" includes="*.c"/>
								<!--<fileset dir="src/main/c" includes="linux/*.c, all/*.c"/>-->
			</path>
						<!--<mapper type="flatten"/>-->
			<map from="${basedir}/src/main/c/linux/" to=""/>
		</pathconvert>
		<echo>sources: ${_sources}</echo>
				<!--<exec dir="src/main/c" executable="gcc" failonerror="true">-->
		<exec dir="src/main/c/linux" executable="x86_64-pc-linux-gnu-gcc" failonerror="true">
			<arg value="-Wall"/>
			<arg value="-fpic"/>
			<arg value="-shared"/>
			<arg value="-I${linux_jniHeadersPath}"/>
			<arg value="-I${linux_jniHeadersPath}/linux"/>
			<arg value="-m32"/>
						<!--<arg value="-nostdinc"/>-->
			<arg value="-o"/>
			<arg value="lib${module.linuxJniLibName}.so"/>
			<arg line="${module.linuxGccExtraLib}"/>
			<arg line="${_sources}"/>
		</exec>
		<move todir="product" file="src/main/c/linux/lib${module.linuxJniLibName}.so"/>
	</target>
	
	<target name="libLinux-x86_64" depends="init">
		<pathconvert pathsep=" " dirsep="/" property="_sources">
			<path>
				<fileset dir="src/main/c/linux" includes="*.c"/>
								<!--<fileset dir="src/main/c" includes="linux/*.c, all/*.c"/>-->
			</path>
						<!--<mapper type="flatten"/>-->
			<map from="${basedir}/src/main/c/linux/" to=""/>
		</pathconvert>
		<echo>sources: ${_sources}</echo>
				<!--<exec dir="src/main/c" executable="gcc" failonerror="true">-->
		<exec dir="src/main/c/linux" executable="x86_64-pc-linux-gnu-gcc" failonerror="true">
			<arg value="-Wall"/>
			<arg value="-fpic"/>
			<arg value="-shared"/>
			<arg value="-I${linux_jniHeadersPath}"/>
			<arg value="-I${linux_jniHeadersPath}/linux"/>
			<arg value="-I/usr/include"/>
			<arg value="-o"/>
			<arg value="lib${module.linuxJniLibName}-x86_64.so"/>
			<arg line="${module.linuxGccExtraLib}"/>
			<arg line="${_sources}"/>
		</exec>
		<move todir="product" file="src/main/c/linux/lib${module.linuxJniLibName}-x86_64.so"/>
	</target>
	
	<target name="libLinux" depends="libLinux-x86, libLinux-x86_64"></target>
	
	<target name="libWin-32" depends="init">
		<pathconvert pathsep=" " dirsep="/" property="_wsources">
			<path>
				<fileset dir="src/main/c/windows" includes="*.c" />
			</path>
			<mapper type="flatten"/>
		</pathconvert>
		<echo>sources: ${_wsources}</echo>
		<exec dir="src/main/c/windows" executable="echo" failonerror="true">
			<arg value="i684-w64-mingw32-gcc"/>
			<arg value="-m32"/>
			<arg value="-Wall"/>
			<arg value="-c"/>
			<arg value="-D_JNI_IMPLEMENTATION"/>
			<arg value="-I${windows_jniHeadersPath}"/>
			<arg value="-I${windows_jniHeadersPath}/win32"/>
			<arg line="${_wsources}"/>
		</exec>
		<exec dir="src/main/c/windows" executable="i686-w64-mingw32-gcc" failonerror="true">
			<arg value="-Wall"/>
			<arg value="-m32"/>
			<arg value="-c"/>
			<arg value="-D_JNI_IMPLEMENTATION"/>
			<arg value="-I${windows_jniHeadersPath}"/>
			<arg value="-I${windows_jniHeadersPath}/win32"/>
			<arg line="${_wsources}"/>
		</exec>
		
		<pathconvert pathsep=" " dirsep="/" property="_wobjects">
			<path>
				<fileset dir="src/main/c/windows" includes="*.o" />
			</path>
			<mapper type="flatten"/>
		</pathconvert>
		<echo>objects: ${_wobjects}</echo>
		<exec dir="src/main/c/windows" executable="echo" failonerror="true">
			<arg value="i686-w64-mingw32-gcc"/>
			<arg value="-Wall"/>
			<arg value="-m32"/>
			<arg value="-Wl,--kill-at"/>
			<arg value="-shared"/>
			<arg value="-o"/>
			<arg value="${module.winJniLibName}.dll"/>
			<arg line="${_wobjects}"/>
			<arg line="${module.windowsGccExtraLib}"/>
		</exec>
		<exec dir="src/main/c/windows" executable="i686-w64-mingw32-gcc" failonerror="true">
			<arg value="-Wall"/>
			<arg value="-Wl,--kill-at"/>
			<arg value="-m32"/>
			<arg value="-shared"/>
			<arg value="-o"/>
			<arg value="${module.winJniLibName}.dll"/>
			<arg line="${_wobjects}"/>
			<arg line="${module.windowsGccExtraLib}"/>
		</exec>
		<delete>
			<fileset dir="src/main/c/windows" includes="*.o"/>
		</delete>
		<move todir="product" file="src/main/c/windows/${module.winJniLibName}.dll"/>
	</target>
		
	<target name="libWin-64" depends="init">
		<pathconvert pathsep=" " dirsep="/" property="_wsources">
			<path>
				<fileset dir="src/main/c/windows" includes="*.c" />
			</path>
			<mapper type="flatten"/>
		</pathconvert>
		<echo>sources: ${_wsources}</echo>
		<exec dir="src/main/c/windows" executable="echo" failonerror="true">
			<arg value="x86_64-w64-mingw32-gcc"/>
			<arg value="-Wall"/>
			<arg value="-c"/>
			<arg value="-D_JNI_IMPLEMENTATION"/>
			<arg value="-I${windows_jniHeadersPath}"/>
			<arg value="-I${windows_jniHeadersPath}/win32"/>
			<arg line="${_wsources}"/>
		</exec>
		<exec dir="src/main/c/windows" executable="x86_64-w64-mingw32-gcc" failonerror="true">
			<arg value="-Wall"/>
			<arg value="-c"/>
			<arg value="-D_JNI_IMPLEMENTATION"/>
			<arg value="-I${windows_jniHeadersPath}"/>
			<arg value="-I${windows_jniHeadersPath}/win32"/>
			<arg line="${_wsources}"/>
		</exec>
		
		<pathconvert pathsep=" " dirsep="/" property="_wobjects">
			<path>
				<fileset dir="src/main/c/windows" includes="*.o" />
			</path>
			<mapper type="flatten"/>
		</pathconvert>
		<echo>objects: ${_wobjects}</echo>
		<exec dir="src/main/c/windows" executable="echo" failonerror="true">
			<arg value="x86_64-w64-mingw32-gcc"/>
			<arg value="-Wall"/>
			<arg value="-Wl,--kill-at"/>
			<arg value="-shared"/>
			<arg value="-o"/>
			<arg value="${module.winJniLibName}-64.dll"/>
			<arg line="${_wobjects}"/>
			<arg line="${module.windowsGccExtraLib-64}"/>
		</exec>
		<exec dir="src/main/c/windows" executable="x86_64-w64-mingw32-gcc" failonerror="true">
			<arg value="-Wall"/>
			<arg value="-Wl,--kill-at"/>
			<arg value="-shared"/>
			<arg value="-o"/>
			<arg value="${module.winJniLibName}-64.dll"/>
			<arg line="${_wobjects}"/>
			<arg line="${module.windowsGccExtraLib-64}"/>
		</exec>
		<delete>
			<fileset dir="src/main/c/windows" includes="*.o"/>
		</delete>
		<move todir="product" file="src/main/c/windows/${module.winJniLibName}-64.dll"/>
	</target>
	
	<target name="libWin" depends="libWin-32, libWin-64"></target>
	
	<target name="libOsx" depends="init">
		<copy file="svnRepository/current/trunk/users/marcello3d/osx-build/lib${module.osxJniLibName}.jnilib" toDir="product"/>
	</target>
	
	<target name="lib" depends="updateNativeBuildHeaders, libLinux, libWin, libOsx"/>
	
	<target name="all" depends="clean, lib, javaBuild.all"/>

</project>